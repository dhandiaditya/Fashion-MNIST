
#import the important libraries.

import tensorflow as tf
from tensorflow import keras


import numpy as np
import matplotlib.pyplot as plt

print(tf.__version__)

#import dataset from keras

fashion_mnist = keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

#give the class names

class_names = [ 'T-shirt/Top','Trouser','Pullover','Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankel boot']

#show the first image in train dataset


plt.figure()
plt.imshow(train_images[0])
plt.colorbar
plt.gca().grid(False)


#conver pixels values from 0 to 1

train_images =train_images/255.0
test_images = test_images/255.0

define the model

model= keras.Sequential([
                         
                        keras.layers.Flatten(input_shape=(28,28)),
                        keras.layers.Dense(128, activation=tf.nn.relu),
                        keras.layers.Dense(10, activation=tf.nn.softmax)
])

#complile the model

model.compile(optimizer = tf.keras.optimizers.Adam(),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
              
#run the model

model.fit(train_images,train_labels, epochs=5)

#test the accuracy

test_loss, test_acc = model.evaluate(test_images, test_labels)

#predict the test images

predictions = model.predict(test_images)
print('Test accuracy', test_acc)

#show the results
predictions[0]

